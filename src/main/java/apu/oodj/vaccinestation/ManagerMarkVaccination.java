/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package apu.oodj.vaccinestation;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;

import apu.oodj.vaccinestation.Internals.FileHandling;
import apu.oodj.vaccinestation.Internals.Managerial.VaccineRequest;
import apu.oodj.vaccinestation.Internals.Users.*;
import apu.oodj.vaccinestation.Model.VaccineRequestModel;

/**
 *
 * @author N4O
 */
public class ManagerMarkVaccination extends javax.swing.JFrame {
    private Manager user;
    private List<User> uList;
    private ArrayList<VaccineRequest> allRequests;

    // 0 -> disable
    // 1 -> by user name
    // 2 -> by user id
    private int searchMode;

    /**
     * Creates new form ManagerMarkVaccination
     */
    public ManagerMarkVaccination(Manager user) {
        initComponents();
        this.user = user;

        String[] requests;
        try {
            requests = FileHandling.ReadFile("vaccinerequest");
        } catch (FileNotFoundException ex) {
            requests = new String[] {};
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Unable to read vaccine request data, please contact Admin!");
            new HomepageManager(user).setVisible(true);
            this.setVisible(false);
            return;
        }

        String[] usersRaws;
        try {
            usersRaws = FileHandling.ReadFile("userdata");
        } catch (FileNotFoundException ex) {
            usersRaws = new String[] {};
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Unable to read user data, please contact Admin!");
            new HomepageManager(user).setVisible(true);
            this.setVisible(false);
            return;
        }

        this.allRequests = new ArrayList<>();
        this.uList = new ArrayList<>();
        this.searchMode = 0;

        for (String request : requests)
        {
            this.allRequests.add(VaccineRequest.ParseData(request));
        }
        for (String ud : usersRaws)
        {
            this.uList.add(User.ParseData(ud));
        }

        this.refreshModelDataAndRenderer();
    }

    private boolean shouldSearchQueryContinue(VaccineRequest req) {
        String textField = txtSearchField.getText();
        if (textField == null) {
            return true;
        }

        textField = textField.trim().toLowerCase();
        if (this.searchMode == 0) {
            return true;
        }
        if (textField.length() < 1) {
            return true;
        }
        User umatch = null;
        for (User u : this.uList) {
            if (u.getId().equals(req.getUserId())) {
                umatch = u;
                break;
            }
        }
        if (umatch == null) {
            return false;
        }

        switch (this.searchMode) {
            case 1:
                return umatch.getName().toLowerCase().contains(textField);
            case 2:
                return umatch.getId().toLowerCase().contains(textField);
            default:
                return false;
        }
    }

    private void refreshModelDataAndRenderer() {
        // Display all pending requests on the JTable userSubmissionTable table
        ArrayList<VaccineRequest> onlyPending = new ArrayList<>();
        for (VaccineRequest request : this.allRequests)
        {
            if (request.isApproved()) {
                if (this.shouldSearchQueryContinue(request)) {
                    onlyPending.add(request);
                }
            }
        }
        VaccineRequestModel model = new VaccineRequestModel(onlyPending, false);
        userSubmissionTable.setModel(model);
        userSubmissionTable.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnApprove = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userSubmissionTable = new javax.swing.JTable();
        btnSearchById = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnGoBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnResetSearch = new javax.swing.JButton();
        txtSearchField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnSearchByName = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnApprove.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnApprove.setText("Mark Done");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        userSubmissionTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        userSubmissionTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(userSubmissionTable);

        btnSearchById.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSearchById.setText("Search User ID");
        btnSearchById.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByIdActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Kindly manage the vaccination status below!");

        btnGoBack.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnGoBack.setText("Go Back");
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setText("Hello Manager!");

        btnResetSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnResetSearch.setText("Reset Search");
        btnResetSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetSearchActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Search For User");

        btnSearchByName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSearchByName.setText("Search Full Name");
        btnSearchByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchByNameActionPerformed(evt);
            }
        });

        btnReject.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnReject.setText("Mark Undone");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnGoBack, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnSearchByName, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSearchById, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnResetSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 172, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(220, 220, 220))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addComponent(txtSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchByName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnResetSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchById, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(btnGoBack, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean saveRequestChanges() {
        ArrayList<String> requestList = new ArrayList<>();
        for (VaccineRequest vcr : allRequests) {
            requestList.add(vcr.ExportData());
        }
        try {
            FileHandling.WriteString("vaccinerequest", requestList, false);
        } catch (IOException ex) {
            return false;
        }
        return true;
    }

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        int selIndex = this.userSubmissionTable.getSelectedRow();
        if (selIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to mark as done");
            return;
        }

        VaccineRequestModel requestModel = (VaccineRequestModel) this.userSubmissionTable.getModel();
        VaccineRequest sel = requestModel.getRequest(selIndex);
        if (sel == null) {
            JOptionPane.showMessageDialog(null, "Please select a row to mark as done");
            return;
        }

        int indexActual = this.indexRequestChanges(sel.getId());
        if (indexActual < 0) {
            JOptionPane.showMessageDialog(null, "Error: Could not find request in list");
            return;
        }

        sel.setVaccinated(true);
        allRequests.set(indexActual, sel);
        boolean success = saveRequestChanges();
        if (!success) {
            JOptionPane.showMessageDialog(null, "Failed to save changes, please contact admin!");
            return;
        }
        JOptionPane.showMessageDialog(this, "Vaccination status is now marked as done!");
        this.refreshModelDataAndRenderer();
    }//GEN-LAST:event_btnApproveActionPerformed

    private void btnSearchByIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByIdActionPerformed
        this.searchMode = 2;
        this.refreshModelDataAndRenderer();
    }//GEN-LAST:event_btnSearchByIdActionPerformed

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        new HomepageManager(this.user).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnGoBackActionPerformed

    private void btnResetSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetSearchActionPerformed
        this.searchMode = 0;
        this.refreshModelDataAndRenderer();
    }//GEN-LAST:event_btnResetSearchActionPerformed

    private void btnSearchByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchByNameActionPerformed
        this.searchMode = 1;
        this.refreshModelDataAndRenderer();
    }//GEN-LAST:event_btnSearchByNameActionPerformed

    private int indexRequestChanges(String requestId) {
        for (int i = 0; i < this.allRequests.size(); i++) {
            if (this.allRequests.get(i).getId().equals(requestId)) {
                return i;
            }
        }
        return -1;
    }

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        int selIndex = this.userSubmissionTable.getSelectedRow();
        if (selIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to mark as undone");
            return;
        }

        VaccineRequestModel requestModel = (VaccineRequestModel) this.userSubmissionTable.getModel();
        VaccineRequest sel = requestModel.getRequest(selIndex);
        if (sel == null) {
            JOptionPane.showMessageDialog(null, "Please select a row to mark as undone");
            return;
        }

        int indexActual = this.indexRequestChanges(sel.getId());
        if (indexActual < 0) {
            JOptionPane.showMessageDialog(null, "Error: Could not find request in list");
            return;
        }

        sel.setVaccinated(false);
        allRequests.set(indexActual, sel);
        boolean success = saveRequestChanges();
        if (!success) {
            JOptionPane.showMessageDialog(null, "Failed to save changes, please contact admin!");
            return;
        }
        JOptionPane.showMessageDialog(this, "Vaccination status is now marked as undone!");
        this.refreshModelDataAndRenderer();
    }//GEN-LAST:event_btnRejectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerMarkVaccination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerMarkVaccination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerMarkVaccination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerMarkVaccination.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerMarkVaccination(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnGoBack;
    private javax.swing.JButton btnReject;
    private javax.swing.JButton btnResetSearch;
    private javax.swing.JButton btnSearchById;
    private javax.swing.JButton btnSearchByName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtSearchField;
    private javax.swing.JTable userSubmissionTable;
    // End of variables declaration//GEN-END:variables
}
