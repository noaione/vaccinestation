/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package apu.oodj.vaccinestation;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;

import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import apu.oodj.vaccinestation.Internals.FileHandling;
import apu.oodj.vaccinestation.Internals.Managerial.Station;
import apu.oodj.vaccinestation.Internals.Users.Manager;
import apu.oodj.vaccinestation.Internals.Vaccine.StoredVaccine;
import apu.oodj.vaccinestation.Internals.Vaccine.Vaccine;

/**
 *
 * @author N4O
 */
public class ManagerModifyVaccineStock extends javax.swing.JFrame {
    private Manager manager;
    private Station station;
    private StoredVaccine storage;

    /**
     * Creates new form ManagerModifyVaccineStock
     */
    public ManagerModifyVaccineStock(Manager user, Station station) {
        initComponents();
        this.manager = user;
        this.station = station;

        String[] storageRaws;
        try {
            storageRaws = FileHandling.ReadFile("storedvaccines");
        } catch (FileNotFoundException e) {
            storageRaws = new String[] {};
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occured trying to read storaed vaccine information!");
            new HomepageManager(manager).setVisible(true);
            this.setVisible(false);
            return;
        }

        for (String store : storageRaws) {
            StoredVaccine svr = StoredVaccine.ParseData(store);
            if (svr.getAssociatedStationId().equals(station.getId())) {
                storage = svr;
                break;
            }
        }

        if (storage == null) {
            storage = new StoredVaccine(station.getId());
        }

        this.refreshStoredVaccinesSets();
    }

    private ArrayList<Vaccine> getUniqueVaccines() {
        ArrayList<Vaccine> uniqueVaccines = new ArrayList<Vaccine>();
        for (Vaccine v : storage.getVaccines()) {
            if (!uniqueVaccines.contains(v)) {
                uniqueVaccines.add(v);
            }
        }
        return uniqueVaccines;
    }

    private void refreshStoredVaccinesSets() {
        DefaultListModel<Vaccine> model = new DefaultListModel<>();
        ArrayList<Vaccine> uniqueVaccines = this.getUniqueVaccines();
        for (Vaccine vac : uniqueVaccines) {
            model.addElement(vac);
        }
        lstVaccine.setModel(model);

        String[] vacTypes;
        try {
            vacTypes = FileHandling.ReadFile("vaccines");
        } catch (FileNotFoundException e) {
            vacTypes = new String[] {};
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occured trying to read vaccine information!");
            new HomepageManager(manager).setVisible(true);
            this.setVisible(false);
            return;
        }

        DefaultComboBoxModel<Vaccine> model2 = new DefaultComboBoxModel<>();
        for (String vac : vacTypes) {
            Vaccine vc = Vaccine.ParseData(vac);
            if (uniqueVaccines.contains(vc)) {
                continue;
            }
            model2.addElement(vc);
        }
        if (model2.getSize() < 1) {
            btnCreateNew.setEnabled(false);
        } else {
            btnCreateNew.setEnabled(true);
        }
        cmbNewVacSelect.setModel(model2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstVaccine = new javax.swing.JList<>();
        btnModifyVaccine = new javax.swing.JButton();
        btnRemoveVaccine = new javax.swing.JButton();
        btnCreateNew = new javax.swing.JButton();
        btnGoBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmbNewVacSelect = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Adjust Vaccine Stock");

        lstVaccine.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstVaccine.setToolTipText("");
        jScrollPane1.setViewportView(lstVaccine);

        btnModifyVaccine.setText("Modify");
        btnModifyVaccine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyVaccineActionPerformed(evt);
            }
        });

        btnRemoveVaccine.setText("Remove All");
        btnRemoveVaccine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveVaccineActionPerformed(evt);
            }
        });

        btnCreateNew.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCreateNew.setText("Select and add");
        btnCreateNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewActionPerformed(evt);
            }
        });

        btnGoBack.setText("Go Back");
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });

        jLabel2.setText("Add new vaccine");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnGoBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(btnCreateNew)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cmbNewVacSelect, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnRemoveVaccine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnModifyVaccine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnModifyVaccine)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemoveVaccine)))
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbNewVacSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(btnCreateNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(btnGoBack)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnModifyVaccineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyVaccineActionPerformed
        Vaccine sel = lstVaccine.getSelectedValue();
        if (sel == null) {
            JOptionPane.showMessageDialog(this, "Please select a vaccine to modify!");
            return;
        }

        new ManagerModifyPerVaccineStock(this.manager, this.station, this.storage, sel).setVisible(true);;
        this.setVisible(false);
    }//GEN-LAST:event_btnModifyVaccineActionPerformed

    private void btnRemoveVaccineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveVaccineActionPerformed
        Vaccine sel = lstVaccine.getSelectedValue();
        if (sel == null) {
            JOptionPane.showMessageDialog(this, "Please select a vaccine to remove!");
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to remove: " + sel.getName() + "?\nThis will remove all stored vaccines of this type!");
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        // Remove from list
        this.storage.removeVaccinesById(sel.getId());
        try {
            FileHandling.ReplaceById("storedvaccines", this.storage.getStoreId(), this.storage.ExportData());
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Unable to remove vaccine because an error occured!");
            return;
        }

        JOptionPane.showMessageDialog(this, "Stored vaccine removed!");
        this.refreshStoredVaccinesSets();
    }//GEN-LAST:event_btnRemoveVaccineActionPerformed

    private void btnCreateNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewActionPerformed
        Vaccine sel = (Vaccine) cmbNewVacSelect.getSelectedItem();
        if (sel == null) {
            JOptionPane.showMessageDialog(this, "Please select a vaccine to add!");
            return;
        }
        new ManagerModifyPerVaccineStock(this.manager, this.station, this.storage, sel).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnCreateNewActionPerformed

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        new HomepageManager(this.manager).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnGoBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerModifyVaccineStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerModifyVaccineStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerModifyVaccineStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerModifyVaccineStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerModifyVaccineStock(null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateNew;
    private javax.swing.JButton btnGoBack;
    private javax.swing.JButton btnModifyVaccine;
    private javax.swing.JButton btnRemoveVaccine;
    private javax.swing.JComboBox<Vaccine> cmbNewVacSelect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<Vaccine> lstVaccine;
    // End of variables declaration//GEN-END:variables
}
