/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package apu.oodj.vaccinestation;

import java.util.ArrayList;

import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.text.DefaultFormatter;

import java.awt.Color;
import java.io.IOException;
import java.text.DecimalFormat;

import apu.oodj.vaccinestation.Internals.FileHandling;
import apu.oodj.vaccinestation.Internals.Managerial.Station;
import apu.oodj.vaccinestation.Internals.Users.Manager;
import apu.oodj.vaccinestation.Internals.Vaccine.StoredVaccine;
import apu.oodj.vaccinestation.Internals.Vaccine.Vaccine;

/**
 *
 * @author N4O
 */
public class ManagerModifyPerVaccineStock extends javax.swing.JFrame {
    private Manager manager;
    private Station station;
    private Vaccine vaccine;
    private StoredVaccine storedVaccine;
    private final Color yellowDark = new Color(153, 153, 0);
    private final Color greenDark = new Color(0, 153, 0);

    private ArrayList<Vaccine> vaccineList;

    /**
     * Creates new form ManagerModifyPerVaccineStock
     */
    public ManagerModifyPerVaccineStock(Manager manager, Station station, StoredVaccine storage, Vaccine vaccine) {
        initComponents();
        this.manager = manager;
        this.station = station;
        this.vaccine = vaccine;
        this.storedVaccine = storage;

        ArrayList<Vaccine> sameVac = new ArrayList<>();
        for (Vaccine vac : storage.getVaccines()) {
            if (vac.getId().equals(vaccine.getId())) {
                sameVac.add(vac);
            }
        }
        vaccineList = sameVac;

        lblVacName.setText(vaccine.getName());
        lblDifCount.setText("0");
        lblDifCount.setForeground(yellowDark);

        SpinnerNumberModel model = new SpinnerNumberModel();
        model.setValue(sameVac.size());
        model.setMinimum(0);
        model.setStepSize(1);
        txtStockCount.setModel(model);

        // https://stackoverflow.com/a/7587253
        JComponent comp = txtStockCount.getEditor();
        JFormattedTextField field = (JFormattedTextField) comp.getComponent(0);
        DefaultFormatter formatter = (DefaultFormatter) field.getFormatter();
        formatter.setCommitsOnValidEdit(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblVacName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnModifyConfirm = new javax.swing.JButton();
        btnGoBack = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblDifCount = new javax.swing.JLabel();
        txtStockCount = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Modify Stock");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Vaccine:");

        lblVacName.setText("-----");

        jLabel3.setText("Adjust Stock Count");

        btnModifyConfirm.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnModifyConfirm.setText("Modify");
        btnModifyConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyConfirmActionPerformed(evt);
            }
        });

        btnGoBack.setText("Go Back");
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Difference");

        lblDifCount.setText("-----");

        txtStockCount.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtStockCountStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnGoBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblVacName, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(lblDifCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModifyConfirm, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtStockCount, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblVacName))
                .addGap(34, 34, 34)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtStockCount, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDifCount)
                .addGap(18, 18, 18)
                .addComponent(btnModifyConfirm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addComponent(btnGoBack)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to go back?", "Confirm", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            new ManagerModifyVaccineStock(this.manager, this.station).setVisible(true);
            this.setVisible(false);
        }
    }//GEN-LAST:event_btnGoBackActionPerformed

    private void btnModifyConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyConfirmActionPerformed
        int stocks = (int) txtStockCount.getValue();

        if (stocks < 0) {
            JOptionPane.showMessageDialog(this, "Invalid number entered, number must be more than equals 0");
            return;
        }

        int diff = stocks - vaccineList.size();
        DecimalFormat df = new DecimalFormat("#,##0.###");
        String diffText = "+" + df.format(diff);
        if (diff < 0) {
            diffText = df.format(diff);
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to modify the stock of this vaccine?\nDifference: " + diffText, "Confirm", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        if (diff == 0) {
            JOptionPane.showMessageDialog(this, "No difference in stock, no changes made");
            new ManagerModifyVaccineStock(this.manager, this.station).setVisible(true);
            this.setVisible(false);
            return;
        }

        if (diff < 0) {
            // remove
            this.storedVaccine.removeVaccinesById(this.vaccine.getId(), Math.abs(diff));
        } else {
            this.storedVaccine.addVaccines(this.vaccine, diff);
        }
        try {
            FileHandling.ReplaceById("storedvaccines", this.storedVaccine.getStoreId(), this.storedVaccine.ExportData());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error occured while saving data");
            return;
        }
        JOptionPane.showMessageDialog(this, "Vaccine count adjusted!");
        new ManagerModifyVaccineStock(this.manager, this.station).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnModifyConfirmActionPerformed

    private void txtStockCountStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtStockCountStateChanged
        int stocks = (int) txtStockCount.getValue();
        int diff = stocks - vaccineList.size();
        DecimalFormat df = new DecimalFormat("#,##0.###");
        String diffText = "+" + df.format(diff);
        if (diff == 0) {
            diffText = "0";
            lblDifCount.setForeground(this.yellowDark);
        } else if (diff < 0) {
            diffText = df.format(diff);
            lblDifCount.setForeground(Color.RED);
        } else {
            lblDifCount.setForeground(this.greenDark);
        }
        lblDifCount.setText(diffText);
    }//GEN-LAST:event_txtStockCountStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerModifyPerVaccineStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerModifyPerVaccineStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerModifyPerVaccineStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerModifyPerVaccineStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerModifyPerVaccineStock(null, null, null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGoBack;
    private javax.swing.JButton btnModifyConfirm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblDifCount;
    private javax.swing.JLabel lblVacName;
    private javax.swing.JSpinner txtStockCount;
    // End of variables declaration//GEN-END:variables
}
